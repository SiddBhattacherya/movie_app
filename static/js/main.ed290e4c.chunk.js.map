{"version":3,"sources":["logo.svg","MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["MovieList","props","state","nominatedMovies","movies","title","button_state","handleChange","bind","handleSubmit","nominateMovie","axios","get","res","list","data","Search","this","setState","movie","console","log","joined","concat","removed","filter","el","event","target","name","value","preventDefault","getMovies","Jumbotron","className","length","Badge","color","Form","onSubmit","FormGroup","Input","type","onChange","Button","Container","Row","xs","Col","fluid","map","m","Alert","Title","Year","disabled","id","onClick","removeNomination","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed290e4c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport SearchField from 'react-search-field';\r\nimport {Alert, Button, Badge, Form, FormGroup, Label, Input, FormText,   Card, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle, Container, Jumbotron, JumbotronProps, Col, Row } from 'reactstrap';\r\nimport MovieResult from \"./MovieResult\";\r\nimport styles from './MovieList.css';\r\n\r\nlet movies = {}\r\n   \r\nclass MovieList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            nominatedMovies: [],\r\n            movies: [], \r\n            title: '',\r\n            button_state: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.nominateMovie = this.nominateMovie.bind(this)\r\n    }\r\n   \r\n    async componentDidMount(){\r\n     \r\n    }\r\n\r\n    async getMovies(title){\r\n        let res = await axios.get(`https://www.omdbapi.com/?S=${title}&apikey=79dfb4ab`)\r\n        let list = res.data.Search;\r\n        this.setState({movies:list})\r\n    }\r\n\r\n    nominateMovie(movie){\r\n        console.log(movie)\r\n        var joined = this.state.nominatedMovies.concat(movie);\r\n        this.setState({ nominatedMovies: joined })\r\n        //localStorage.setItem(\"nominated movie\", movie)\r\n    }\r\n\r\n    removeNomination(movie){\r\n        console.log(movie)\r\n        var removed = this.state.nominatedMovies.filter(el => el !== movie)\r\n        this.setState({nominatedMovies: removed})\r\n    }\r\n\r\n     handleChange(event){\r\n        this.setState({[event.target.name]: event.target.value})\r\n        console.log(\"change\")\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        this.getMovies(this.state.title)\r\n        console.log(\"submit\")\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                 <Jumbotron>\r\n                        <h1 className=\"display-3\">Movie Buddy</h1>\r\n                        {\r\n                            this.state.nominatedMovies.length >= 5 && (\r\n                               <h1> <Badge color='success'>Congrats! You have nominated 5 movies!</Badge></h1>\r\n                            )\r\n\r\n                            \r\n                        }\r\n                        <p className=\"lead\">Search for movies and nominate them!</p>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Input type=\"text\" name=\"title\" onChange={this.handleChange} value={this.state.title}></Input>\r\n                            </FormGroup>\r\n                            <Button color=\"primary\" type='submit'>Search</Button>\r\n                        </Form>\r\n                        \r\n                        \r\n                    \r\n                </Jumbotron>\r\n                <Container className=\"float-left\">\r\n                <Row xs=\"2\"> \r\n                \r\n                    <Col>\r\n                    <Jumbotron color=\"primary\" fluid>\r\n                    <h3 className='searchText'>Search Results</h3>\r\n                        <div>\r\n                                    {this.state.movies.map(m =>(\r\n                                        <Row xs=\"2\">\r\n                                          <Col className='movieListing'> <Alert key={m.Title} color='danger'>{m.Title} ({m.Year})  <Button disabled={this.state.button_state} color='primary' id={m} onClick={() => this.nominateMovie(m)}>Nominate</Button></Alert> </Col>\r\n                                        </Row>\r\n                                    ))}\r\n                        </div>\r\n\r\n                </Jumbotron>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                    <Jumbotron color=\"primary\" fluid>\r\n                    <h3 className='nominationText'>Nominated Movies</h3>\r\n                        <div>\r\n                                    {this.state.nominatedMovies.map(m =>(\r\n                                        <Row xs=\"2\">\r\n                                          <Col className='nomination'> <Alert key={m} color='danger'>{m.Title} ({m.Year}) <Button id={m} onClick={()=>this.removeNomination(m)} >Remove</Button></Alert> </Col>\r\n                                        </Row>\r\n                                    ))}\r\n                        </div>\r\n\r\n                </Jumbotron>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n                \r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieList;","import logo from './logo.svg';\nimport './App.css';\nimport MovieList from './MovieList'\nimport styles from './MovieList.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MovieList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './MovieList.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}