{"version":3,"sources":["logo.svg","MovieResult.js","MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["MovieResult","props","state","key","title","year","button_state","nominated_movies","movie","nominateButton","bind","console","log","this","setState","joined","concat","Col","Alert","color","Button","disabled","onClick","Component","MovieList","nominatedMovies","movies","handleChange","handleSubmit","nominateMovie","movie_list","JSON","parse","localStorage","getItem","axios","get","res","list","data","Search","setItem","stringify","removed","filter","el","event","target","name","value","preventDefault","getMovies","Jumbotron","className","length","Badge","Form","onSubmit","FormGroup","Input","type","onChange","Container","Row","xs","fluid","map","m","Title","Year","includes","id","removeNomination","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ce26f4e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from \"react\";\r\nimport MovieList,{noimateMovie, nominateMovie} from './MovieList';\r\nimport axios from 'axios';\r\nimport SearchField from 'react-search-field';\r\nimport {Alert, Button, Badge, Form, FormGroup, Label, Input, FormText,   Card, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle, Container, Jumbotron, JumbotronProps, Col, Row } from 'reactstrap';\r\n\r\nimport styles from './MovieList.css';\r\n\r\n\r\nclass MovieResult extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n         key: '',\r\n         title: '',\r\n         year: '',\r\n         button_state: false,\r\n         nominated_movies: [],\r\n         movie: ''\r\n\r\n        };\r\n        this.nominateButton = this.nominateButton.bind(this)  \r\n    }\r\n    nominateButton(movie){\r\n        \r\n        console.log(\"clicked button\")\r\n        \r\n        this.setState({button_state:true})\r\n        var joined = this.state.nominated_movies.concat(movie);\r\n        this.setState({ nominated_movies: joined })\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n               \r\n             <Col> <Alert {...this.props.key} color='danger'>{this.props.title} ({this.props.year})  <Button disabled={this.props.disabled} onClick={this.props.onClick}  color='primary'  >Nominate</Button></Alert> </Col> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieResult","import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport SearchField from 'react-search-field';\r\nimport {Alert, Button, Badge, Form, FormGroup, Label, Input, FormText,   Card, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle, Container, Jumbotron, JumbotronProps, Col, Row } from 'reactstrap';\r\nimport MovieResult from \"./MovieResult\";\r\nimport './MovieList.css';\r\n\r\n\r\nlet movies = {}\r\n   \r\nclass MovieList extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            nominatedMovies: [],\r\n            movies: [], \r\n            title: '',\r\n            button_state: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.nominateMovie = this.nominateMovie.bind(this)\r\n    }\r\n   \r\n    async componentDidMount(){\r\n     let movie_list = JSON.parse(localStorage.getItem('nominatedMovies'))\r\n     this.setState({nominatedMovies: movie_list})\r\n     console.log(localStorage.getItem('nominatedMovies'))\r\n    }\r\n\r\n    async getMovies(title){\r\n        let res = await axios.get(`https://www.omdbapi.com/?S=${title}&apikey=79dfb4ab`)\r\n        let list = res.data.Search;\r\n        this.setState({movies:list})\r\n    }\r\n\r\n    nominateMovie(movie){\r\n        var joined = this.state.nominatedMovies.concat(movie);\r\n        localStorage.setItem('nominatedMovies', JSON.stringify(joined))\r\n        this.setState({ nominatedMovies: joined })\r\n        console.log(localStorage.getItem('nominatedMovies'))\r\n        this.setState({button_state:true})\r\n    }\r\n\r\n    removeNomination(movie){\r\n        console.log(movie)\r\n        var removed = this.state.nominatedMovies.filter(el => el !== movie)\r\n        localStorage.setItem('nominatedMovies', JSON.stringify(removed))\r\n        this.setState({nominatedMovies: removed})\r\n    }\r\n\r\n     handleChange(event){\r\n        this.setState({[event.target.name]: event.target.value})\r\n        console.log(\"change\")\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        this.getMovies(this.state.title)\r\n        console.log(\"submit\")\r\n    }\r\n    render(){\r\n        return(\r\n            <div >\r\n                 <Jumbotron>\r\n                        <h1 className=\"display-3\">Movie Buddy</h1>\r\n                        {\r\n                             this.state.nominatedMovies.length < 4 && (\r\n                               <h1> <Badge color='success'>Nominate {5 - (this.state.nominatedMovies.length)} Movies!</Badge></h1>\r\n                            )\r\n\r\n                            \r\n                        }\r\n                        {\r\n                             this.state.nominatedMovies.length == 4 && (\r\n                               <h1> <Badge color='success'>Nominate 1 Movie!</Badge></h1>\r\n                            )\r\n\r\n                            \r\n                        }\r\n                        {\r\n                            this.state.nominatedMovies.length >= 5 && (\r\n                               <h1> <Badge color='success'>Congrats! You have nominated 5 movies!</Badge></h1>\r\n                            )\r\n\r\n                            \r\n                        }\r\n                        <p className=\"lead\">Search for movies and nominate them!</p>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Input type=\"text\" name=\"title\" onChange={this.handleChange} value={this.state.title}></Input>\r\n                            </FormGroup>\r\n                            <Button color=\"primary\" type='submit'>Search</Button>\r\n                        </Form>\r\n                        \r\n                        \r\n                    \r\n                </Jumbotron>\r\n                <Container className=\"float-left\">\r\n                    <Row xs=\"2\"> \r\n                        <Col>\r\n                            <Jumbotron color=\"primary\" fluid>\r\n                                <h3 className='SearchText'>Search Results</h3>\r\n                                <span> &nbsp; </span>\r\n                                    <div>\r\n                                        {this.state.movies.map(m =>(\r\n                                        \r\n                                            <Row xs=\"2\">\r\n                                                <MovieResult title={m.Title} year={m.Year} key={m} onClick={() => this.nominateMovie(m)} disabled={this.state.nominatedMovies.includes(m) || this.state.nominatedMovies.length >= 5} />\r\n                                            {/* <Col className='movieListing'> <Alert key={m.Title} color='danger'>{m.Title} ({m.Year})  <Button disabled={this.state.button_state} color='primary' id={m} onClick={() => this.nominateMovie(m)}>Nominate</Button></Alert> </Col> */}\r\n                                            </Row>\r\n                                        ))}\r\n                                    </div>\r\n                            </Jumbotron>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Jumbotron color=\"primary\" fluid>\r\n                                <h3 className='NominationText'>Nominated Movies</h3>\r\n                                <span> &nbsp; </span>\r\n                                    <div>\r\n                                        {this.state.nominatedMovies.map(m =>(\r\n                                            <Row xs=\"2\">\r\n                                            <Col> <Alert key={m} color='danger'>{m.Title} ({m.Year}) <Button id={m} onClick={()=>this.removeNomination(m)} >Remove</Button></Alert> </Col>\r\n                                            </Row>\r\n                                        ))}\r\n                                    </div>\r\n                            </Jumbotron>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                \r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieList;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport MovieList from './MovieList'\nimport styles from './MovieList.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MovieList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './MovieList.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}